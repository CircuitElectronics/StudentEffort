Traceback (most recent call last):
  File "H:\HadiSadoghiYazdi\CircuitNew\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "H:\HadiSadoghiYazdi\CircuitNew\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "H:\HadiSadoghiYazdi\CircuitNew\Lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\Hadi\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 719, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "H:\HadiSadoghiYazdi\CircuitNew\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "H:\HadiSadoghiYazdi\CircuitNew\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "H:\HadiSadoghiYazdi\CircuitNew\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
from PySpice.Spice.Netlist import Circuit
from PySpice.Unit import *
from PySpice.Probe.Plot import plot
from PySpice.Logging.Logging import setup_logging

# Setup logging (optional)
setup_logging()

# Create circuit
circuit = Circuit("Common Emitter Amplifier")

# Power supply
circuit.V(1, 'Vcc', circuit.gnd, 5@u_V)

# Input AC signal
circuit.SinusoidalVoltageSource("Vin", 'in', circuit.gnd, amplitude=1@u_mV, frequency=1@u_kHz)

# Resistors
circuit.R(1, 'Vcc', 'base', 33@u_kÎ©)  # Base resistor
circuit.R(2, 'base', circuit.gnd, 4.7@u_kÎ©)  # Voltage divider
circuit.R(3, 'Vcc', 'collector', 4.7@u_kÎ©)  # Collector resistor
circuit.R(4, 'emitter', circuit.gnd, 1@u_kÎ©)  # Emitter resistor

# Capacitors
circuit.C(1, 'in', 'base', 10@u_uF)  # Input coupling capacitor
circuit.C(2, 'emitter', circuit.gnd, 10@u_uF)  # Bypass capacitor
circuit.C(3, 'collector', "out", 10@u_uF)  # Output coupling capacitor

# Transistor
circuit.BJT(1, 'collector', 'base', 'emitter', model='npn')
circuit.model('npn', 'npn', bf=80, vaf=100@u_V, is_=1e-14, cjc=pico(5), rb=100)

# Ensure 'out' node is properly connected
circuit.R('load', "out", circuit.gnd, 1@u_kÎ©)  # Load resistor to ensure 'out' is not floating

# Simulation setup
simulator = circuit.simulator(temperature=25, nominal_temperature=25)

# Run a transient analysis
analysis = simulator.transient(step_time=0.01@u_ms, end_time=7@u_ms)

# Scale voltage to kilovolts
vin_kV = np.array([float(voltage) / 1000 for voltage in analysis['in']])
vout_kV = np.array([float(voltage) / 1000 for voltage in analysis['out']])

# Plot the results
plt.figure(figsize=(10, 6))
plt.title("Common Emitter Amplifier - Transient Analysis (Voltage in kV)")

plt.plot(analysis.time, vin_kV, label='Input Voltage (Vin) [kV]')
plt.plot(analysis.time, vout_kV, label='Output Voltage (Vout) [kV]')

plt.xlabel('Time [s]')
plt.ylabel('Voltage [kV]')
plt.legend()
plt.grid()
plt.show()

------------------


[31m---------------------------------------------------------------------------[39m
[31mModuleNotFoundError[39m                       Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[2][39m[32m, line 3[39m
[32m      1[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mnumpy[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mnp[39;00m
[32m      2[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mmatplotlib[39;00m[34;01m.[39;00m[34;01mpyplot[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mplt[39;00m
[32m----> [39m[32m3[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mPySpice[39;00m[34;01m.[39;00m[34;01mSpice[39;00m[34;01m.[39;00m[34;01mNetlist[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m Circuit
[32m      4[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mPySpice[39;00m[34;01m.[39;00m[34;01mUnit[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m *
[32m      5[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mPySpice[39;00m[34;01m.[39;00m[34;01mProbe[39;00m[34;01m.[39;00m[34;01mPlot[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m plot

[31mModuleNotFoundError[39m: No module named 'PySpice'

